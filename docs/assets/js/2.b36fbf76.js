(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{27:function(e,t,n){"use strict";n.r(t);var r=n(1),o=n(32),s=n.n(o),a=n(33),c=n.n(a),i=function(){return r.createElement("div",{className:"markdown-body section",dangerouslySetInnerHTML:{__html:'<blockquote>\n<p>What I cannot create, I do not understand. —— Feynman</p>\n</blockquote>\n<p><code>HellDoc</code>就是我拿来理解<a href="https://github.com/vuejs/vuepress/blob/master/"><code>vuepress</code></a>工作方式的一个玩具项目。开发的过程中遇到的问题正是我学习的机会，下面是一些我在这之前所不熟悉或事一知半解的内容:</p>\n<h3 id="1-markdown-文件修改的即时更新">1. Markdown 文件修改的即时更新</h3>\n<p>vuepress 会把收集到的 md 文件通过 <a href="https://github.com/vuejs/vuepress/blob/master/packages/%40vuepress/markdown-loader/index.js"><code>markdown-loader</code></a> 编译成一个个的 vue 组件，并且生成一个包括了这些组件的文档应用的 route 文件。</p>\n<p>在这个基础上，<code>*.md</code>文件的修改理所当然得会被 webpack 自动捕捉到（因为已经在上面生成的 route 的依赖列表里了）；而对于目录上的文件增删则是用<a href="https://github.com/paulmillr/chokidar"><code>chokidar</code></a>做了文件目录的 watch，触发的时候重新渲染<code>router</code>文件</p>\n<p>值得一提的是，在修改<code>config.js</code>这样的配置文件的时候：因为 nodejs 对 js-module 做了缓存的原因，无法触发文件更新，这时候就需要把<code>require.cache[absoluteFilePath]</code>的缓存内容删除，然后再进行后续的文档 App 部分的更新。</p>\n<h3 id="2-非常友好的-logger-提示">2. 非常友好的 Logger 提示</h3>\n<p>vuepress 中让我觉得特别友好的 log 提示是怎么做到的</p>\n<ol>\n<li>@vuepress/logger 统一的 logger 模块</li>\n<li><a href="https://github.com/nuxt/webpackbar">webpackbar</a> 给你更直观的编译信息</li>\n<li>在需要的生命周期中添加合理的<a href="https://github.com/vuejs/vuepress/blob/master/packages/%40vuepress/core/lib/webpack/DevLogPlugin.js">log 插件</a></li>\n</ol>\n<h3 id="3-devserver-的路由设置参考">3. DevServer 的路由设置参考</h3>\n<p>vuepress 的 dev 指令是在本地编写文档的时候使用的，你可以从这里学到一个 SPA 应用在测试的时候 webpackDevServer 如何设置最为<strong>自由</strong>,<strong>效率</strong></p>\n<pre><code class="language-javascript">// 摘自@vuepress/core dev.js\nconst serverConfig = Object.assign(\n  {\n    disableHostCheck: true,\n    compress: true,\n    clientLogLevel: &quot;error&quot;,\n    hot: true,\n    quiet: true, // vuepress里面的log都通过插件或自己处理了\n    headers: {\n      &quot;access-control-allow-origin&quot;: &quot;*&quot;\n    },\n    open: cliOptions.open,\n    publicPath: ctx.base,\n    watchOptions: {\n      ignored: [/node_modules/, `!${ctx.tempPath}/**`]\n    },\n    historyApiFallback: {\n      disableDotRule: true,\n      rewrites: [{ from: /./, to: path.posix.join(ctx.base, &quot;index.html&quot;) }]\n    },\n    overlay: false,\n    host,\n    contentBase,\n    before(app, server) {\n      if (fs.existsSync(contentBase)) {\n        app.use(ctx.base, require(&quot;express&quot;).static(contentBase));\n      }\n\n      ctx.pluginAPI.options.beforeDevServer.syncApply(app, server);\n    },\n    after(app, server) {\n      ctx.pluginAPI.options.afterDevServer.syncApply(app, server);\n    }\n  },\n  ctx.siteConfig.devServer || {}\n);</code></pre>\n<h3 id="ova">OVA</h3>\n<p>因为自己是 TS 用户，顺手帮社区补全了一下<a href="https://github.com/neutrinojs/webpack-chain/pull/132"><code>webpack-chian</code></a>的类型声明文件。</p>\n<p>: )</p>\n'}})};t.default=function(){return r.createElement(s.a,{Side:r.createElement(c.a,{headings:[{id:"1. Markdown 文件修改的即时更新",level:3,parent:null,text:"1. Markdown 文件修改的即时更新"},{id:"2. 非常友好的 Logger 提示",level:3,parent:null,text:"2. 非常友好的 Logger 提示"},{id:"3. DevServer 的路由设置参考",level:3,parent:null,text:"3. DevServer 的路由设置参考"},{id:"OVA",level:3,parent:null,text:"OVA"}]}),Content:r.createElement(i,null)})}},32:function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});t.__esModule=!0;var s=n(1),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this.props,t=e.Side,n=e.Content;return s.createElement("div",null,s.createElement("div",{className:"columns"},s.createElement("div",{className:"side",style:{minWidth:"220px"}},s.createElement("div",{className:"nav section"},t)),s.createElement("div",{className:"content"},n)))},t}(s.PureComponent);t.default=a},33:function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),s=this&&this.__assign||function(){return(s=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};t.__esModule=!0;var a=n(1),c=n(6),i=n(34),p=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return this.props.headings.map(function(t,n){return a.createElement(i.default,{key:n,level:t.level},a.createElement(c.Link,s({},e.getLinkProps(t))))})},t.prototype.getLinkProps=function(e){var t=e.text.replace(/\(.*\)/,"");return{dangerouslySetInnerHTML:{__html:t},replace:!1,to:"#"+encodeURIComponent(t)}},t}(a.Component);t.default=p},34:function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});t.__esModule=!0;var s=n(1),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this.props,t=e.level,n=e.children;return s.createElement("div",{className:"nav-label-item level-"+t+" "+(n&&"has-child")},n)},t}(s.PureComponent);t.default=a}}]);